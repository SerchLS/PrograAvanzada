/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package poli_bike;

import com.panamahitek.ArduinoException;
import java.awt.Dimension;
import java.util.logging.Level;
import java.util.logging.Logger;
import jssc.SerialPortEvent;
import jssc.SerialPortEventListener;
import com.panamahitek.ArduinoException;
import com.panamahitek.PanamaHitek_Arduino;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;

import jssc.SerialPortEvent;
import jssc.SerialPortEventListener;
import jssc.SerialPortException;
import AppPackage.AnimationClass;
import java.awt.Dimension;


import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
/*Librerías para trabajar con archivos excel*/
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;


import javax.swing.table.DefaultTableModel;

import jssc.SerialPortException;


/**
 *
 * @author Propietario
 */
public class Ventana2 extends javax.swing.JFrame {

    PanamaHitek_Arduino arduino = new PanamaHitek_Arduino();
    SerialPortEventListener escucha; 
    DefaultTableModel tabla;
      String cabecera [] = {"# Usuario", "Nombre", "Apellido", "Boleta"};  
        

    public Ventana2() {
        
        this.escucha = new SerialPortEventListener() {
            
            @Override
            public void serialEvent(SerialPortEvent spe) {
                try {
                    if (arduino.isMessageAvailable())
                    {
                       String mensaje;
                       mensaje = arduino.printMessage(); //
                        mostrar.setText(mensaje);
                        System.out.println(mensaje);
                       GUI.usuario.setText(mensaje);
                           
                    }
                }
                catch (SerialPortException ex)
                {Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);}
                
                catch (ArduinoException ex)
                {Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);}
                
                
            }
        };
        
        initComponents();
        this.setLocationRelativeTo(null);
        
        String datos [][] = {};
        tabla = new DefaultTableModel (datos, cabecera);
        jTabla.setModel(tabla);
        
           
        
        
     
        try {
            arduino.arduinoRXTX("COM3", 9600, escucha);
        } catch (ArduinoException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTabla = new javax.swing.JTable();
        LLL = new javax.swing.JLabel();
        regresar = new javax.swing.JLabel();
        mostrar = new javax.swing.JLabel();
        comparar_datos = new javax.swing.JLabel();
        excel_importar = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 0, 51));
        jScrollPane1.setForeground(new java.awt.Color(255, 0, 0));
        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N

        jTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "# Usuario", "Nombre", "Apellido", "Boleta"
            }
        ));
        jTabla.setRowHeight(30);
        jScrollPane1.setViewportView(jTabla);
        if (jTabla.getColumnModel().getColumnCount() > 0) {
            jTabla.getColumnModel().getColumn(0).setPreferredWidth(30);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 102, 450, 340));

        LLL.setFont(new java.awt.Font("Brisk", 1, 25)); // NOI18N
        LLL.setForeground(new java.awt.Color(255, 255, 255));
        LLL.setText("Identificando Usuario:");
        getContentPane().add(LLL, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 250, 30));

        regresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logo_homeB.png"))); // NOI18N
        regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                regresarMouseClicked(evt);
            }
        });
        getContentPane().add(regresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 460, -1, -1));

        mostrar.setFont(new java.awt.Font("Brisk", 1, 25)); // NOI18N
        mostrar.setForeground(new java.awt.Color(255, 255, 255));
        mostrar.setText("..........................");
        getContentPane().add(mostrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 320, 33));

        comparar_datos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/registro_logoB.png"))); // NOI18N
        comparar_datos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comparar_datosMouseClicked(evt);
            }
        });
        getContentPane().add(comparar_datos, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 460, 50, 50));

        excel_importar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logo _excel.png"))); // NOI18N
        excel_importar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                excel_importarMouseClicked(evt);
            }
        });
        getContentPane().add(excel_importar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 470, -1, -1));

        jButton1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 153, 153));
        jButton1.setText("Salir");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(773, 10, 80, 40));

        wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/wallpaper_azul.jpg"))); // NOI18N
        getContentPane().add(wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comparar_datosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comparar_datosMouseClicked

        String compara;
        String usuario1;
             usuario1 = "Sergio";
        String usuario2;
             usuario2 = "Samantha";
        String usuario3;
             usuario3 = "Upiita";
        
        compara = mostrar.getText();
        System.out.println(compara);
  
        
 
       if (compara.equals(usuario1))
       { 
         //  asignacion.setText("Bienvenido Pikachu");
           
           String u = "1";
           String n = "Sergio";
           String a = "López S.";
           String b = "2015640207";
           Object datos [] = {u, n, a, b};  

           tabla.addRow(datos);
           
       }
       else if (compara.equals(usuario2))
       {    
        //   asignacion.setText("Bienvenida Sam");
           
           String u = "2";
           String n = "Samantha";
           String a = "Arreguín C.";
           String b = "2014031470";
           Object datos [] = {u, n, a, b};  

           tabla.addRow(datos);
       }
       
       else if (compara.equals(usuario3))
       {    
        //   asignacion.setText("Bienvenida Sam");
           
           String u = "3";
           String n = "Upiita";
           String a = "IPN";
           String b = "2016640220";
           Object datos [] = {u, n, a, b};  

           tabla.addRow(datos);
       }
       
       
       
       
       
       
       
       else
       {
         //  asignacion.setText("Usuario No Registrado ");
       
           String u = "X";
           String n = "NO ID";
           String a = "NO ID";
           String b = "XXXXXXXXX";
           Object datos [] = {u, n, a, b};  

           tabla.addRow(datos);
       }
      

// TODO add your handling code here:
    }//GEN-LAST:event_comparar_datosMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        System.exit(0);      
       

    }//GEN-LAST:event_jButton1MouseClicked

    private void regresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresarMouseClicked
       
        GUI abrir = new GUI();
        abrir.setVisible(true);
       //  GUI.setExtendedState();          //Intento  de maximizar
        this.setVisible(false);
         this.setExtendedState(ICONIFIED);       //Minimizar
        
    }//GEN-LAST:event_regresarMouseClicked
public void exportarExcel(JTable t) throws IOException {
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de excel", "xls");
        chooser.setFileFilter(filter);
        chooser.setDialogTitle("Guardar archivo");
        chooser.setAcceptAllFileFilterUsed(false);
        if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            String ruta = chooser.getSelectedFile().toString().concat(".xls");
            try {
                File archivoXLS = new File(ruta);
                if (archivoXLS.exists()) {
                    archivoXLS.delete();
                }
                archivoXLS.createNewFile();
                Workbook libro = new HSSFWorkbook();
                FileOutputStream archivo = new FileOutputStream(archivoXLS);
                Sheet hoja = libro.createSheet("Mi hoja de trabajo 1");
                hoja.setDisplayGridlines(false);
                for (int f = 0; f < t.getRowCount(); f++) {
                    Row fila = hoja.createRow(f);
                    for (int c = 0; c < t.getColumnCount(); c++) {
                        Cell celda = fila.createCell(c);
                        if (f == 0) {
                            celda.setCellValue(t.getColumnName(c));
                        }
                    }
                }
                int filaInicio = 1;
                for (int f = 0; f < t.getRowCount(); f++) {
                    Row fila = hoja.createRow(filaInicio);
                    filaInicio++;
                    for (int c = 0; c < t.getColumnCount(); c++) {
                        Cell celda = fila.createCell(c);
                        if (t.getValueAt(f, c) instanceof Double) {
                            celda.setCellValue(Double.parseDouble(t.getValueAt(f, c).toString()));
                        } else if (t.getValueAt(f, c) instanceof Float) {
                            celda.setCellValue(Float.parseFloat((String) t.getValueAt(f, c)));
                        } else {
                            celda.setCellValue(String.valueOf(t.getValueAt(f, c)));
                        }
                    }
                }
                libro.write(archivo);
                archivo.close();
                Desktop.getDesktop().open(archivoXLS);
            } catch (IOException | NumberFormatException e) {
                throw e;
            }
        }
    }


///////////////////////////////////////////////////////////////////////////////////////////////////////////
 ////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////



    public static void importar(String[] args) throws Exception{
        /*La ruta donde se creará el archivo*/
        String rutaArchivo = System.getProperty("user.home")+"/ejemploExcelJava.xls";
        /*Se crea el objeto de tipo File con la ruta del archivo*/
        File archivoXLS = new File(rutaArchivo);
        /*Si el archivo existe se elimina*/
        if(archivoXLS.exists()) archivoXLS.delete();
        /*Se crea el archivo*/
        archivoXLS.createNewFile();
        
        /*Se crea el libro de excel usando el objeto de tipo Workbook*/
        Workbook libro = new HSSFWorkbook();
        /*Se inicializa el flujo de datos con el archivo xls*/
        FileOutputStream archivo = new FileOutputStream(archivoXLS);
        
        /*Utilizamos la clase Sheet para crear una nueva hoja de trabajo dentro del libro que creamos anteriormente*/
        Sheet hoja = libro.createSheet("Mi hoja de trabajo 1");
        
        /*Hacemos un ciclo para inicializar los valores de 10 filas de celdas*/
        for(int f=0;f<10;f++){
            /*La clase Row nos permitirá crear las filas*/
            Row fila = hoja.createRow(f);
            
            /*Cada fila tendrá 5 celdas de datos*/
            for(int c=0;c<5;c++){
                /*Creamos la celda a partir de la fila actual*/
                Cell celda = fila.createCell(c);
                
                /*Si la fila es la número 0, estableceremos los encabezados*/
                if(f==0){
                    if(c==0)
                    celda.setCellValue("Usuario");
                    if(c==1)
                    celda.setCellValue("Nombre");
                    if(c==2)
                    celda.setCellValue("Apellido");
                    if(c==3)
                    celda.setCellValue("Boleta");
                }else{
                    /*Si no es la primera fila establecemos un valor*/
                    celda.setCellValue("");
                }
            }
        }
        
        /*Escribimos en el libro*/
        libro.write(archivo);
        /*Cerramos el flujo de datos*/
        archivo.close();
        /*Y abrimos el archivo con la clase Desktop*/
        Desktop.getDesktop().open(archivoXLS);
    }   

    
    
    
    private void excel_importarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_excel_importarMouseClicked
        
         /*    try {
            importar(cabecera);
            } catch (Exception ex) {
            Logger.getLogger(Ventana2.class.getName()).log(Level.SEVERE, null, ex);
            }*/
        
        try {
           
            
            exportarExcel (jTabla);
        } catch (IOException ex) {
            Logger.getLogger(Ventana2.class.getName()).log(Level.SEVERE, null, ex);
        }

        
    }//GEN-LAST:event_excel_importarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel LLL;
    private javax.swing.JLabel comparar_datos;
    private javax.swing.JLabel excel_importar;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabla;
    public static javax.swing.JLabel mostrar;
    private javax.swing.JLabel regresar;
    private javax.swing.JLabel wallpaper;
    // End of variables declaration//GEN-END:variables
}
